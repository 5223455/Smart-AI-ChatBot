name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        python-version: [3.8, 3.9, '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Node.js tests
      run: npm test
    
    - name: Lint JavaScript files
      run: |
        npm install -g eslint
        eslint frontend/scripts.js nodejs-backend/server.js --fix
    
    - name: Lint Python files
      run: |
        pip install flake8
        flake8 flask-backend/app.py --max-line-length=100
    
    - name: Check code formatting
      run: |
        npm install -g prettier
        prettier --check frontend/scripts.js frontend/styles.css

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        npm ci
        pip install -r requirements.txt
    
    - name: Run security audit (Node.js)
      run: npm audit --audit-level=moderate
    
    - name: Run security audit (Python)
      run: |
        pip install safety
        safety check

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: |
        echo "Building Smart ChatBot..."
        echo "Frontend files ready"
        echo "Backend files ready"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: chatbot-build
        path: |
          frontend/
          nodejs-backend/
          flask-backend/
          package.json
          requirements.txt
          README.md

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "This would deploy to your staging server"
    
    - name: Run smoke tests
      run: |
        echo "Running smoke tests..."
        echo "Health check: OK"
        echo "API endpoints: OK"
        echo "Frontend: OK"
